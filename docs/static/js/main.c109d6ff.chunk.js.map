{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+KAqCeA,EAlCK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EAGAC,mBAAS,IAHT,mBAG5BC,EAH4B,KAGjBC,EAHiB,KAmBnC,OACA,sBAAMC,SAVe,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAG,OAAGP,GAAH,mBAAiBO,OAClCN,EAAc,MAKtB,SACI,uBACAO,YAAY,uCACZC,KAAK,OACLC,MAAOV,EACPW,SAnBiB,SAACR,GAClBF,EAAcE,EAAES,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,mGACqFC,UAAUH,IAD/F,SAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAQD,EAAKE,KAAI,SAAAC,GACnB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QARrB,kBAWhBM,GAXgB,4CAAH,sDCAPO,G,KAAW,SAAC,GAAiB,EAAhBJ,GAAiB,IAAdC,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAG/B,OACA,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,SCLCO,EAAU,SAAC,GAAc,IAAbnB,EAAY,EAAZA,SAAY,ECDT,SAACA,GAAY,IAAD,EAEZf,mBAAS,CAC7BsB,KAAK,GACLa,SAAQ,IAJwB,mBAE9BC,EAF8B,KAExBC,EAFwB,KAkBpC,OAXAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAd,GACEY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAGtB,CAACpB,IAGIqB,EDduBI,CAAazB,GAA/Ba,EAHqB,EAG1BN,KAAYa,EAHc,EAGdA,QAEnB,OACA,qCACI,oBAAIJ,UAAU,oDAAd,SAAmEhB,IAClEoB,GAAW,oBAAIJ,UAAU,mDAAd,wBACZ,qBAAKA,UAAU,YAAf,SACSH,EAAOJ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEcde,EA1BM,WAAI,MAGezC,mBAAS,CAAC,WAHzB,mBAGd0C,EAHc,KAGF3C,EAHE,KAKrB,OACA,qCACI,8CACA,oDACA,6CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWlB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CACIA,SAAUA,GACLA,YCdzB4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.c109d6ff.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories})=>{\r\n\r\n    //Creamos un estado para manejar el valor del input\r\n    const [inputValue,setinputValue] = useState('');\r\n\r\n    //Creamos una función que nos permite manejar el cambio de estado/valor del input\r\n    const handleChange = (e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n    //Creamos una función que permite manejar el cambio de estado del formulariio\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        //console.log('Submit Hecho');\r\n        if (inputValue.trim().length>2){\r\n            setCategories(cat=>[inputValue,...cat]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n    <form onSubmit={handleSubmit}>\r\n        <input\r\n        placeholder=\"Escribe aquí para buscar imagenes\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n        />\r\n    </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;","\r\n\r\n//Función que nos permite hacer la petición al API de Giphy\r\nexport const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=Ji3hUw0UWRgKS9QkgQXwnCXGgzzQP7xA&limit=10&q=${encodeURI(category)}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs =  data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n        }\r\n    });\r\nreturn gifs;\r\n}","import React from \"react\";\r\nimport '../index.css';\r\n\r\nexport const GridItem = ({id,title,url})=>{\r\n\r\n\r\n    return(\r\n    <div className=\"card animate__animated animate__fadeIn animate__slower\">\r\n        <img src={url} alt={title}/>\r\n        <p>{title}</p>\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({category})=>{\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n    <>\r\n        <h3 className=\"animate__animated animate__fadeIn animate__slower\">{category}</h3>\r\n        {loading && <h3 className=\"animate__animated animate__flash animate__slower\">Loading...</h3>}\r\n        <div className=\"card-grid\">\r\n                {images.map((img)=>\r\n                (<GridItem \r\n                    key={img.id} \r\n                    {...img} \r\n                />))}\r\n        </div>\r\n    </>\r\n    );\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../Helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const[state,setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(img=>{\r\n                setState({\r\n                    data:img,\r\n                    loading:false\r\n                })\r\n        })\r\n    },[category]);\r\n\r\n\r\n    return state; //{data:[],loading:true}\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    //Declaramos el state que nos permite contener nuestras categorias\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    return(\r\n    <>\r\n        <h1>GifExpertApp</h1>\r\n        <h3>By Dante G Morales</h3>\r\n        <h4>Using React</h4>\r\n        <AddCategory setCategories={setCategories} />\r\n        <hr></hr>\r\n        <ol>\r\n            {\r\n                categories.map(category=>(\r\n                <GifGrid\r\n                    category={category}\r\n                    key={category}\r\n                />\r\n                ))\r\n            }\r\n        </ol>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\nimport './index.css';\r\n\r\n\r\n//Renderiza el componente principal del la aplicación\r\nReactDOM.render(\r\n    <GifExpertApp/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}